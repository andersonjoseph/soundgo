services:
  # TEST DEVELOPMENT
  soundgo_env:
    profiles: [dev]
    container_name: soundgo_env
    tty: true
    stdin_open: true
    image: soundgo:0.0.1
    links:
      - db
    depends_on:
      - db
    build:
      context: .
    volumes:
      - .:/usr/src/app
      - ~/.cache:/root/.cache/go-build
      - ~/go/pkg/mod:/go/pkg/mod
    environment:
      DB_USER: ${DB_USER}
      DB_PORT: ${DB_PORT}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      GOOSE_DRIVER: ${GOOSE_DRIVER}
      GOOSE_DBSTRING: ${GOOSE_DBSTRING}
      JWT_KEY: ${JWT_KEY}
      PORT: ${PORT}
    ports:
      - ${PORT}:${PORT}
      - 8080:8080
  db:
    profiles: [dev]
    image: postgres:16-alpine
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d soundgo_test"]
      interval: 5s
      timeout: 60s

  # TEST ENVIRONMENT
  soundgo_test:
    profiles: [test]
    container_name: soundgo_test
    tty: true
    stdin_open: true
    image: soundgo:0.0.1
    links:
      - test_db
    depends_on:
      - test_db
    build:
      context: .
    volumes:
      - .:/usr/src/app
      - ~/.cache:/root/.cache/go-build
      - ~/go/pkg/mod:/go/pkg/mod
    environment:
      DB_USER: ${TEST_DB_USER}
      DB_PORT: ${TEST_DB_PORT}
      DB_PASSWORD: ${TEST_DB_PASSWORD}
      DB_NAME: ${TEST_DB_NAME}
      DB_HOST: ${TEST_DB_HOST}
      GOOSE_DRIVER: ${GOOSE_DRIVER}
      GOOSE_DBSTRING: ${TEST_GOOSE_DBSTRING}
      JWT_KEY: ${JWT_KEY}
      PORT: ${TEST_PORT}
      HOST: ${TEST_HOST}
    ports:
      - ${TEST_PORT}:${TEST_PORT}
  test_db:
    profiles: [test]
    image: postgres:16-alpine
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${TEST_DB_USER}
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
      POSTGRES_DB: ${TEST_DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d soundgo_test -U user"]
      interval: 1s
      timeout: 30s
      retries: 30
